@{
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    string appPath = Convert.ToString(ApplicationInstance.Application["ApplicationPath"]);
}
@model User

<div class="maincontents">
    @using (Html.BeginForm("ChangePassword", "User", FormMethod.Post, null))
    {
        @Html.AntiForgeryToken()
        <h1>Profile Setting</h1>
        <p>
            To ensure password security please follow the rules below when selecting or changing
            your password:<br>
            <br>
            Your password must:
        </p>
        <ol>
            <li>Be at least 8 characters long</li>
            <li>Contain at least 1 number: (0 to 9)</li>
            <li>Contain at least 1 lower case letter: (a to z)</li>
            <li>Contain at least 1 upper case letter: (A to Z)</li>
            <li>Contain at least 1 special character: ( ! @@ # $ % ^ & * _ )</li>
        </ol>
        if (ViewBag.Success != null)
        {
            bool result = Convert.ToBoolean(ViewBag.Success);
            <div class="alert @(result ? "success" : "danger")">
                <a href="javascript:void(0)"> x</a>
                <strong>
                    @(result ? "Updated" : "Incorrect")
                </strong>
                @(result ? " successfully" : " current password")
            </div>
        }
        <div>
            <table cellpadding="0" cellspacing="0" border="0" class="tblcreate">
                <tr>
                    <td class="fieldname">Current Password</td>
                    <td>
                        @Html.PasswordFor(m => m.Password, new { @type = "password", id = "Password", autocomplete = "off" })
                        @Html.ValidationMessageFor(m => m.Password)
                    </td>
                </tr>
                <tr>
                    <td class="fieldname">New Password</td>
                    <td>
                        @Html.PasswordFor(m => m.NewPassword, new { @type = "password", id = "NewPassword", autocomplete = "off" })
                        @Html.ValidationMessageFor(m => m.NewPassword)
                    </td>
                </tr>
                <tr>
                    <td class="fieldname">Confirm New Password</td>
                    <td>
                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "textField", id = "ConfirmPassword", autocomplete = "off" })
                        @Html.ValidationMessageFor(m => m.ConfirmPassword)
                    </td>
                </tr>
            </table>

            <div class="padding10"></div>
            <div class="floatRight">
                <a href="javascript:void(0)" class="submitBtn" id="submit_btn">Save</a>

            </div>
            <div class="clear"></div>
        </div>
    }
</div>



@section Script{
    <script type="text/javascript" src="@BundleTable.Bundles.ResolveBundleUrl("~/User-changepasswordjs")"></script>
}

@section Style{
    <style type="text/css">
        .alert {
            padding: 15px;
            padding-right: 15px;
            margin-bottom: 20px;
            border: 1px solid transparent;
            border-top-color: transparent;
            border-right-color: transparent;
            border-bottom-color: transparent;
            border-left-color: transparent;
            border-radius: 4px;
            color: #31708f;
            background-color: #d9edf7;
            border-color: #bce8f1;
            text-align: center;
        }

            .alert a {
                background-color: transparent;
                text-decoration: none !important;
                font-size: 18px !important;
                line-height: 1.2;
                float: right;
                font-size: 21px;
                font-weight: 700;
                line-height: 1;
                color: #000;
                text-shadow: 0 1px 0 #fff;
                filter: alpha(opacity=20);
                opacity: .2;
            }

            .alert.success {
                background-color: #92f8aa !important;
                color: #1b800c !important;
            }



            .alert.danger {
                background-color: #f39393 !important;
                color: #a40909 !important;
            }
    </style>
}

